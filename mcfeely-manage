#!/usr/bin/perl
# vi:ts=4:sw=4:sm:ai:et:

# mcfeely        Asynchronous remote task execution.
# Copyright (C) 1999 Kiva Networking
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# You may contact the maintainer at <mcfeely-maintainer@systhug.com>.

use McFeely::Internal;
use Fcntl;
use IO::File;

use vars qw( $Asked_to_exit $Tasks_in_progress @Tasks %Task %Job $rout $rin );

my $in = shift;
my $out = shift;

open SRR, "<&=$in" or die "open SRR (fd $in): $!\n";
$rout = $rin = '';
fd_set(SRR, $rin);
open SIW, ">&=$out" or die "open SIW (fd $out): $!\n";
select SIW; $| = 1; select STDOUT; $| = 1;

require 'chdir.pl';
require 'const.pl';
require 'log.pl';
require 'safe_to_exit.pl';
require 'files.pl';
require 'tasks.pl';
require 'jobs.pl';
require 'attempt_tasks.pl';
require 'do_select.pl';
require 'read_results.pl';

&chdir_top or bail("Could not chdir: $!; exiting.");
chdir 'queue' or bail("Could not chdir: $!; exiting.");

plog("starting");

scan_job('job', 0);

until ($Asked_to_exit && safe_to_exit) {
    scan_job('newj', 1);
    attempt_tasks();
    do_select();
    read_results();
}

plog("exiting");

